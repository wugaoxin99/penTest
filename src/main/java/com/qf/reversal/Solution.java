package com.qf.reversal;

import com.qf.leetCodeCommon.ListNode;

/**
 * 链表翻转
 * 输入: 1->2->3->4->5->NULL
 * 输出: 5->4->3->2->1->NULL
 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
public class Solution {
    public static void main(String[] args) {
        ListNode head=new ListNode(1);
        ListNode middle=new ListNode(2);
        ListNode tail=new ListNode(3);
        head.next=middle;//将middle赋值给head的下一个节点
        middle.next=tail;//将tail赋值给middle的下一个节点
        ListNode current=head,prev=null;
        while (null!=current){
            ListNode curr=current.next;
            current.next=prev;
            prev=current;
            current=curr;
        }
        do {
            System.out.println(prev.val);
        }while (null!=(prev=prev.next)); //输出结果：3 2 1
    }
}
