package com.qf.reversal;

import java.util.HashMap;
import java.util.Map;
import java.util.Stack;

/**
 * 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
 *
 * 有效字符串需满足：
 *
 * 左括号必须用相同类型的右括号闭合。
 * 左括号必须以正确的顺序闭合。
 * 注意空字符串可被认为是有效字符串。
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/valid-parentheses
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */

public class Solution2 {
    public static void main(String[] args) {
        Stack<Character> stack=new Stack<Character>();
        String str= "({[{[()]}]})";//合法
        String str2="[[[]]][][[]][[[]]][]";//合法
        String str3="({)}";//不合法
        Map<Character,Character> map=new HashMap<Character, Character>();
        //以右括号作为key，左括号作为value存到map集合中
        map.put(')','(');
        map.put('}','{');
        map.put(']','[');
        //将字符串转成数组
        char[] chars = str2.toCharArray();
        int length=chars.length;
        for (int i = 0; i < length; i++) {
            char c = chars[i];
            if (map.containsValue(c)){
                //说明是左括号“(”
                stack.push(c);
            }else {
                //说明是右括号
                /**
                 * pop()从栈顶取出并删除
                 * peek()从栈顶取出但不删除
                 */
                if (stack.size()==0||!map.get(c).equals(stack.peek())){
                    //说明字符串不合法
                    break;
                }else {
                    stack.pop();
                }
            }
        }
        System.out.println(stack.size()==0);
    }
}
