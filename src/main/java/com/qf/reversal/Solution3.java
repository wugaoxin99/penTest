package com.qf.reversal;

import java.util.HashMap;
import java.util.Map;

/**
 * 异位词
 * 给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。
 *
 * 示例 1:
 *
 * 输入: s = "anagram", t = "nagaram"
 * 输出: true
 * 示例 2:
 *
 * 输入: s = "rat", t = "car"
 * 输出: false
 *
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/valid-anagram
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
public class Solution3 {
    public static void main(String[] args) {
        String str1="student";
        String str2="sdentut";//true
        String str3="studden";//false
        if (str1.equals(str2)){
            System.out.println(true);
            return;
        }
        //判断长度是否相等
        if (str1.length()!=str2.length()){
            System.out.println(false);
            return;
        }
        char[] chars = str1.toCharArray();
        Map<Character,Integer> map=new HashMap<Character, Integer>();
        //统计每个字母出现的次数
        for (int i = 0; i < chars.length; i++) {
            char c = chars[i];
            Integer num=map.get(c);
            //如果num为null则没存过该字母
            if (null==num){
                map.put(c,1);
            }else {
                num++;
                map.put(c,num);
            }
        }
        //判断是否是异位词
        chars = str2.toCharArray();
        for (int i = 0; i < chars.length; i++) {
            char c = chars[i];
            Integer num = map.get(c);
            if (null==num){
                //说明该字母在另一个单词中没有，不是异位词
                System.out.println(false);
                return;
            }else {
                num--;
                if (num==0){
                    map.remove(c);
                }else {
                    map.put(c,num);
                }
            }
        }
        System.out.println(map.size()==0);
    }
}
