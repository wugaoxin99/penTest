package com.qf.leetCode;

/**
 * 21. 合并两个有序链表
 * 将两个升序链表合并为一个新的 升序 链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。
 *
 *
 *
 * 示例：
 *
 * 输入：1->2->4, 1->3->4
 * 输出：1->1->2->3->4->4
 */

import com.qf.leetCodeCommon.ListNode;

public class MergeTwoListsTest {
    public static void main(String[] args) {
        ListNode l1 = new ListNode(1);
        l1.next = new ListNode(2);
        ListNode l2 = new ListNode(1);
        l2.next = new ListNode(2);
        l2.next.next = new ListNode(3);
        ListNode mergeTwoLists = mergeTwoLists(l1, l2);
        System.out.println(mergeTwoLists.val+"->"+mergeTwoLists.next.val+"->"+mergeTwoLists.next.next.val+"->"+
                mergeTwoLists.next.next.next.val+"->"+mergeTwoLists.next.next.next.next.val);
    }
    private static ListNode mergeTwoLists(ListNode l1, ListNode l2){
        if (l1 == null || l2 == null) return l1 == null ? l2 : l1;
        if (l1.val < l2.val){
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        } else {
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}
